[[test]]
test_id = "1.1"
test_group = "1:POINT_CLOUD"
test_priority = "MEDIUM"
test_description = "Check that point cloud is being displayed correctly for 2 minutes (Both indoor/outdoor setting) using STDV format (pixel_format=0)"
pass_condition = "Accurate image representation of what the sensor is viewing"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.2"
test_group = "1:POINT_CLOUD"
test_priority = "MEDIUM"
test_description = "Check that point cloud is being displayed correctly for 2 minutes (Both indoor/outdoor setting) using HRAD format (pixel_format=2)"
pass_condition = "Accurate image representation of what the sensor is viewing"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.3"
test_group = "1:POINT_CLOUD"
test_priority = "MEDIUM"
test_description = "Check that point cloud is being displayed correctly for 2 minutes (Both indoor/outdoor setting) using HLZ4 format (pixel_format=3)"
pass_condition = "Accurate image representation of what the sensor is viewing"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.4"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Check per point stability that points do not flicker"
pass_condition = "No flickering on the display of the point cloud"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configuration ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
  "## Ensure the sensor has default configuration ##",
  "## Set pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
  "## Ensure the sensor has default configuration ##",
  "## Set pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 2 minutes ##",
  "wait_s 120",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.5.1"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Testing with STDV. Left scan and right scan encoder range valid."
pass_condition = "Ensure that the missing or bad left and right vertical image scan lines are less than 10"
instructions = [
  "## FULL_AUTO ##",
  "## Set these specific fields below ##",
  "ccc set horiz_fov_left=-2185698,horiz_fov_right=2185698,horiz_firing_period=5916,horiz_fov_left_roi=-699050,horiz_fov_right_roi=699050,horiz_firing_period_roi=2548,nr_slot=2103,roi_enable=1,mst_cycle_duration=200000,pixel_format=0 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the image display ##",
  "wait_e",
  "## Restore the sensor setting to defaults ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  ]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.5.2"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Testing with HLZ4. Left scan and right scan encoder range valid."
pass_condition = ""
instructions = [
  "## FULL_AUTO ##",
  "## Set these specific fields below ##",
  "ccc set horiz_fov_left=-2185698,horiz_fov_right=2185698,horiz_firing_period=5916,horiz_fov_left_roi=-699050,horiz_fov_right_roi=699050,horiz_firing_period_roi=2548,nr_slot=2103,roi_enable=1,mst_cycle_duration=200000,pixel_format=3 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the image display ##",
  "wait_e",
  "## Restore the sensor setting to defaults ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  ]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.6.1"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Check point cloud (STDV format) is being displayed correctly after running for 15 mins (outdoor setting)"
pass_condition = "Accurate image representation of what the sensor is viewing"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 15 minutes ##",
  "wait_s 900",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.6.2"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Check point cloud (HRAD format) is being displayed correctly after running for 15 mins (outdoor setting)"
pass_condition = ""
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 15 minutes ##",
  "wait_s 900",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "1.6.3"
test_group = "1:POINT_CLOUD"
test_priority = "HIGH"
test_description = "Check point cloud (HLZ4 format) is being displayed correctly after running for 15 mins (outdoor setting)"
pass_condition = ""
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on point enable and MST ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe display for 15 minutes ##",
  "wait_s 900",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.1"
test_group = "2:MAGNOSTEER"
test_priority = "HIGH"
test_description = "Check MST frequency at 10Hz"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS is 10Hz within +/- 0.005Hz"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 10Hz ##",
  "ccc set mst_cycle_duration=200000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.2"
test_group = "2:MAGNOSTEER"
test_priority = "HIGH"
test_description = "Check MST frequency at 20Hz"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS is 20Hz within +/- 0.005Hz"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 20Hz ##",
  "ccc set mst_cycle_duration=100000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.3"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST frequency does not go above 25Hz"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS is not exceeding 21Hz within +/- 0.005Hz with FPS entries greater than 21Hz"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 40Hz ##",
  "ccc set mst_cycle_duration=50000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.4"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST frequency change: gradual adjustments (10Hz to 11Hz etc.)"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS matches the incrementing FPS within +/- 0.005Hz"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 10Hz ##",
  "ccc set mst_cycle_duration=200000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
  "## Set the mst frequency to 11Hz ##",
  "ccc set mst_cycle_duration=181818 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
  "## Set the mst frequency to 12Hz ##",
  "ccc set mst_cycle_duration=166666 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.5"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST frequency change: large adjustments (10HZ to 20Hz etc.)"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS matches the incrementing FPS within +/- 0.005Hz"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 10Hz ##",
  "ccc set mst_cycle_duration=200000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
  "## Set the mst frequency to 20Hz ##",
  "ccc set mst_cycle_duration=100000 --force",
  "## Observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.6"
test_group = "2:MAGNOSTEER"
test_priority = "MEDIUM"
test_description = "Check MST stability (shake sensor rotate etc.)"
pass_condition = "Using the mst gui real time FPS monitor, ensure the real and target FPS matches the set FPS within +/- 0.005Hz while shaking"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and point enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Set the mst frequency to 10Hz ##",
  "ccc set mst_cycle_duration=200000 --force",
  "## Shake the sensor and observe the mst gui Real Time FPS monitor ##",
  "wait_e",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.7"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST ROI with defaults"
pass_condition = ""
instructions = []
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.8"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST ROI widening/shortening"
pass_condition = ""
instructions = []
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "2.9"
test_group = "2:MAGNOSTEER"
test_priority = "LOW"
test_description = "Check MST ROI with position (left center right)"
pass_condition = ""
instructions = []
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.1.1"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 10 meters (STDV format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 10m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.1.2"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 10 meters (HRAD format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 10m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.1.3"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 10 meters (HLZ4 format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 10m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.2.1"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 50 meters (STDV format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 50m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.2.2"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 50 meters (HRAD format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 50m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "3.2.3"
test_group = "3:BLOOM_MITIGATION"
test_priority = "HIGH"
test_description = "Check bloom mitigation works at 50 meters (HLZ4 format)"
pass_condition = "The blooming effect around the retro target in view of the sensor is mitigated within specification when the feature is turned on"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Place the retro target at 50m from the sensor at a height of 6 feet ##",
  "## Ensure the sensor has default configurations ##",
  "## Set the pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on the MST and the points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Turn on the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=1 --force",
  "## Observe the points image on the display ##",
  "wait_e",
  "## Turn off the retro target blooming mitigation option (feed-forward) ##",
  "ccc set probing_ffwd_enabled=0 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "4.1"
test_group = "4:FW_LOADING"
test_priority = "LOW"
test_description = "Validate firmware upload capability via CCC App"
pass_condition = "Firmware updates successfully and the FW version change is observed when checked"
instructions = [
  "## FULL_AUTO ##",
  "## Run the update firmware command on the sensor ##",
  "ccc update-firmware ultra.cepbin --force",
  "## Power cycle the sensor ##",
  "wait_e",
  "## Check that the FW version has been updated ##",
  "ccc list-sensors",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "4.2"
test_group = "4:FW_LOADING"
test_priority = "LOW"
test_description = "Validate firmware upload capability via CCC App"
pass_condition = "Firmware updates successfully and the FW version change is observed when checked"
instructions = [
  "## FULL_AUTO ##",
  "## Run the boot server command on the sensor ##",
  "ccc boot-server  ultra.cepbin",
  "## Check that the FW version has been updated ##",
  "ccc list-sensors",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "4.3"
test_group = "4:FW_LOADING"
test_priority = "LOW"
test_description = "Validate firmware rescue mode via CCC App"
pass_condition = "Firmware updates successfully and the FW version change is observed when checked"
instructions = [
  "## FULL_AUTO ##",
  "## Run the rescue mode command on the sensor ##",
  "ccc update-firmware --rescue-mode ultra.cepbin",
  "## Check that the FW version has been updated ##",
  "ccc list-sensors",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "5.1"
test_group = "5:STARTUP"
test_priority = "LOW"
test_description = "Measure the time between the sensor power on and connection to CeptonViewer (Spec < 8 seconds)"
pass_condition = "The time between sensor power on and connection to Cepton Viewer is less than 8 seconds"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure that the sensor is set to display points when power cycled ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Power off the sensors ##",
  "## Ensure that Cepton Viewer is opened and no points is displayed ##",
  "## Power on the sensor and measure the time to get points image on Cepton Viewer ##",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.1.1"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data on) using STDV format"
pass_condition = "STDV points data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn on mst and points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the current points data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the points data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.1.2"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data off) using STDV format"
pass_condition = "INFZ data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to STDV (0) ##",
  "ccc set pixel_format=0 --force",
  "## Turn off mst and points enable ##",
  "ccc set point_enable=0,drive_big_mirror=0 --force",
  "## Observe the current INFZ data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the INFZ data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.2.1"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data on) using HRAD format"
pass_condition = "HRAD points data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn on mst and points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the current points data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the points data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.2.2"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data off) using HRAD format"
pass_condition = "INFZ data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to HRAD (2) ##",
  "ccc set pixel_format=2 --force",
  "## Turn off mst and points enable ##",
  "ccc set point_enable=0,drive_big_mirror=0 --force",
  "## Observe the current INFZ data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the INFZ data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.3.1"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data on) using HLZ4 format"
pass_condition = "HLZ4 points data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn on mst and points enable ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the current points data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the points data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.3.2"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Connect sensor to computer change the src ip of the sensor via CCC application check for corresponding IP in Wireshark (Point data off) using HLZ4 format"
pass_condition = "INFZ data packets have the updated source IP"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the sensor source IP is set to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
  "## Set the pixel format to HLZ4 (3) ##",
  "ccc set pixel_format=3 --force",
  "## Turn off mst and points enable ##",
  "ccc set point_enable=0,drive_big_mirror=0 --force",
  "## Observe the current INFZ data packets source IP ##",
  "wait_e",
  "## Change the source IP ##",
  "ccc set src_ip=192.168.32.44 --force",
  "## Observe the INFZ data packets source IP ##",
  "wait_e",
  "## Ensure the sensor source IP is set back to a common reference value ##",
  "ccc set src_ip=192.168.32.32 --force",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.4"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Check AutoIP functionality"
pass_condition = ""
instructions = [
  "## SEMI_AUTO ##",
  "## This is best tested using a router or dedicated DHCP server ##",
  "## Connect the sensor ethernet port to the router ##",
  "## Disable the DHCP server on the router (power cycle of the router may be needed to release the IP lease) ##",
  "## Set sensor ip to 0.0.0.0 ##",
  "ccc set src_ip=0.0.0.0 --force",
  "## On Auto IP negotiation, the sensor src ip should be set to a 169.x.x.x IP ##",
  "## Remove static ip assignments from your pc network adapter to also get a 169.x.x.x IP ##",
  "## Verify the ip change in wireshark and also test connectivity from ccc tool ##",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "6.5"
test_group = "6:NETWORKING"
test_priority = "LOW"
test_description = "Check DHCP functionality"
pass_condition = ""
instructions = [
  "## SEMI_AUTO ##",
  "## This is best tested using a router or dedicated DHCP server ##",
  "## Connect the sensor ethernet port to the router ##",
  "## Enable the DHCP server on the router (power cycle of the router may be needed to release the IP lease) ##",
  "## Set sensor ip to 0.0.0.0 ##",
  "ccc set src_ip=0.0.0.0 --force",
  "## On DHCP IP assignment, the sensor src ip should be set to the DHCP IP range configured on the router IP ##",
  "## Remove static ip assignments from your pc network adapter to also get a DHCP assigned IP in the same subnet as the sensor ##",
  "## Verify the ip change in wireshark and also test connectivity from ccc tool ##",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "7.1"
test_group = "7:CONFIGURATION"
test_priority = "LOW"
test_description = "Check user exposed configurations (do not rely on \"-d ultra_config.toml\")"
pass_condition = "User exposed configuration fields are accessible without using -d file.toml option"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the PC is on the Cepton network ##",
  "## Do a get all command using the ccc tool with no -d option ##",
  "ccc get-all",
  "## Observe that the configurations are displayed with no errors ##",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "8.2"
test_group = "8:MISC"
test_priority = "LOW"
test_description = "Check sensor connectivity after 1 hour"
pass_condition = "Sensor communication is still functional after one hour"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor has default configurations ##",
  "## Ensure the PC is on the cepton network for diag --fix ##",
  "ccc diag --fix",
  "## Ensure the mst and points are enabled ##",
  "ccc set point_enable=1,drive_big_mirror=1 --force",
  "## Observe the sensor activity and connectivity for 1 hour using viewer and doing list sensors commands ##",
  "event_timed 3600 60 ccc list-sensors",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "8.3"
test_group = "8:MISC"
test_priority = "LOW"
test_description = "Using ccc factory-init to restore settings"
pass_condition = "Sensor configurations correctly set with no side effects such as mirror knocking"
instructions = [
  "## FULL_AUTO ##",
  "## Ensure the sensor is powered on ##",
  "## Ensure the sensor has uninitialized configurations or incorrect but safe values ##",
  "## Noteworthy configurations: ROI's, SPAD's, MST's ##",
  "## REPLACE THIS WITH : a set command that will set some wrong but safe configurations ##",
  "## Run the factory-init command ##",
  "factory_init",
]
test_authors_and_contact_persons = ["TBD"]

[[test]]
test_id = "8.4"
test_group = "8:MISC"
test_priority = "LOW"
test_description = "Ambient mode test. Toggle TOF Intensity in viewer to see. Use HRAD."
pass_condition = ""
instructions = []
test_authors_and_contact_persons = ["TBD"]
